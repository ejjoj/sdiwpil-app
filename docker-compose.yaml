services:
  proxy-service:
    build: proxy-service/.
    container_name: proxy-service
    networks:
      - app-network
    depends_on:
      - customer-service
      - mail-service
      - doctor-service
    ports:
      - "8080:80"
    volumes:
      - ./proxy-service/nginx.conf:/etc/nginx/nginx.conf:ro

  customer-service:
    container_name: customer-service
    build: customer-service/.
    env_file: customer-service/.env
    restart: on-failure
    tty: true
    stdin_open: true
    networks:
      - app-network
    depends_on:
      - database
    volumes:
      - ./customer-service:/app:rw
  
  mail-service:
    container_name: mail-service
    build: mail-service/.
    restart: on-failure
    env_file: mail-service/.env
    environment:
      APP_NAME: mail-service
    networks:
      - app-network
    depends_on:
      - rabbitmq
    tty: true
    stdin_open: true
    volumes:
      - ./mail-service:/app:rw

  doctor-service:
    container_name: doctor-service
    build: doctor-service/.
    env_file: doctor-service/.env
    restart: on-failure
    tty: true
    stdin_open: true
    networks:
      - app-network
    depends_on:
      - database
    volumes:
      - ./doctor-service:/app:rw

  appointment-service:
    container_name: appointment-service
    build: appointment-service/.
    env_file: appointment-service/.env
    restart: on-failure
    tty: true
    stdin_open: true
    networks:
      - app-network
    depends_on:
      - database
    volumes:
      - ./appointment-service:/app:rw
        
  patient-service:
    container_name: patient-service
    build: patient-service/.
    env_file: patient-service/.env
    restart: on-failure
    tty: true
    stdin_open: true
    networks:
      - app-network
    depends_on:
      - database
    volumes:
      - ./patient-service:/app:rw

  database:
    container_name: database
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: sdiwpil_user
      POSTGRES_PASSWORD: password
    volumes:
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    ports:
      - "5432:5432"
        
  rabbitmq:
    container_name: rabbitmq-service
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
